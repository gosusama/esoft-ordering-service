version: '3.8'

services:
  # Eureka Server
  eureka-server:
    container_name: eos-eureka-server-prod
    build:
      context: ./eureka-server
      args:
        DOCKER_BUILDKIT: 1
    ports:
      - "8761:8761"
    networks:
      - eos_network

  # MySQL Database
  mysql-db:
    container_name: eos-mysql-prod
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: root
      MYSQL_USER: springstudent
      MYSQL_PASSWORD: springstudent
    ports:
      - "3307:3306"
    volumes:
      - ./Scripts/setup_eos.sql:/docker-entrypoint-initdb.d
    networks:
      - eos_network

  # Order Service
  order-service:
    build:
      context: ./order-service
      args:
        DOCKER_BUILDKIT: 1
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      # SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/eos
      # SPRING_DATASOURCE_USERNAME: springstudent
      # SPRING_DATASOURCE_PASSWORD: springstudent
    depends_on:
      - eureka-server
      - mysql-db
    networks:
      - eos_network

  # Report Service
  report-service:
    build:
      context: ./report-service
      args:
        DOCKER_BUILDKIT: 1
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      # SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/eos
      # SPRING_DATASOURCE_USERNAME: springstudent
      # SPRING_DATASOURCE_PASSWORD: springstudent
    depends_on:
      - eureka-server
      - mysql-db
    networks:
      - eos_network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      args:
        DOCKER_BUILDKIT: 1
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
    depends_on:
      - eureka-server
      - mysql-db
      - order-service
      - report-service
    networks:
      - eos_network
networks:
  eos_network:
    driver: bridge